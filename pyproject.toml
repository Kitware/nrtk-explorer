[project]
name="nrtk-explorer"
version="0.8.3"
requires-python=">=3.10,<3.13"
description="Model Visualizer"
authors = [
  {name = "Alessandro Genova", email = "alessandro.genova@kitware.com"},
  {name = "Vicente Adolfo Bolea Sanchez", email = "vicente.bolea@kitware.com"},
]
readme = "README.md"
keywords = [
    "Python",
    "Interactive",
    "Web",
    "Application",
    "Framework",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: JavaScript",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "accelerate",
    "numpy",
    "Pillow",
    "pybsm",
    "scikit-learn>=1.6.0",
    "smqtk_image_io",
    "tabulate",
    "timm>=1.0.3",
    "torch",
    "torchvision",
    "trame>=3.7",
    "trame-alerts",
    "trame-quasar",
    "transformers==4.52.1",
    "datasets[vision]",
    "umap-learn",
    "nrtk[pybsm, headless, Pillow, scikit-image, albumentations, waterdroplet, diffusion]==0.26.0",
    "trame-annotations>=0.5.0",
    "kwcoco",
    "psutil", 
    "wslink>=2.3.2",
]

[project.optional-dependencies]
dev = [
  "black",
  "flake8",
  "mypy",
  "pytest",
  "tabulate",
  "types-PyYAML",
  "pre-commit",
]

package = [
  "build<1.3.0",
  "python-semantic-release",
  "setuptools",
  "wheel",
]

web = [
  "trame-vtk",
  "trame-vuetify",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.custom]

[project.scripts]
nrtk-explorer = "nrtk_explorer.app.main:main"
nrtk-explorer-embeddings = "nrtk_explorer.app.embeddings:main"
nrtk-explorer-transforms = "nrtk_explorer.app.transforms:main"
nrtk-explorer-filtering = "nrtk_explorer.app.filtering:main"

[tool.black]
line-length = 99
target-version = ['py39', 'py310', 'py311']
include = '''
    \.pyi?$
'''
extend-exclude = '''
/(
    \.git
  | bundles/
  | examples/
  | exploration/
)/
'''

[tool.mypy]
ignore_missing_imports = true
exclude = ['^src/nrtk_explorer/__init__.py$', '^src/nrtk_explorer/app/.*']

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = [
    "src/nrtk_explorer/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:project.version",
]
build_command = """
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  nvm install 20
  node -v
  npm -v
  python -m venv .venv
  source .venv/bin/activate
  pip install -U pip
  python -m pip install "build<1.3.0" python-semantic-release setuptools wheel
  python -m build .
"""

[tool.semantic_release.branches.main]
match = "(release)"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
